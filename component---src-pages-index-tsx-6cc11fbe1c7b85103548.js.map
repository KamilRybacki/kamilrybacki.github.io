{"version":3,"file":"component---src-pages-index-tsx-6cc11fbe1c7b85103548.js","mappings":"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","sources":["webpack://kamilrybacki/./assets/images/prof_pic.svg","webpack://kamilrybacki/./src/components/IndexSplash/IndexSplash.tsx","webpack://kamilrybacki/./src/components/IndexSplash/index.ts","webpack://kamilrybacki/./src/components/MovingCogs/MovingCogs.tsx","webpack://kamilrybacki/./src/components/MovingCogs/index.ts","webpack://kamilrybacki/./src/pages/index.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/prof_pic-361cb0995b00c4304c25f62c491f13f5.svg\";","import React from 'react';\nimport tw from 'tailwind-styled-components'\n\nimport NavbarMenu from '@components/NavbarMenu';\nimport ProfPic from '@images/prof_pic.svg'\n\nconst IndexSplashWrapper = tw.main`\n\trelative\n\ttop-56\n\tflex\n\tjustify-center\n\talign-middle\n\tmb-36\n\tp-0\n\tw-auto\n\tscale-125\n`\n\nconst TitleWithNavbar = tw.header`\n\tflex\n\tflex-col\n\tgap-0\n\tjustify-center\n`\n\nconst Separator = tw.hr`\n\t-ml-1\n\tp-0\n\th-2\n\tw-full\n\tbg-primary-500\n`\n\nconst MainTitle = tw.title`\n\tfont-display\n\tflex\n\tmb-0\n\tpy-0\n\tpx-8\n\tgap-6\n`\n\nconst MainTitleWord = tw.h1`\n\ttext-8xl\n\ttext-primary-500\n\tfont-bold\n\n\tfirst-letter:text-accent-400\n\tfirst-letter:text-9xl\n`\n\nconst SubTitle = tw.h3`\n\ttext-2xl\n\ttext-center\n\tmy-4\n\tpx-12\n`\n\nconst IndexProfilePicture = tw.img`\n\tp-0\n\tm-0\n\trounded-full\n\tring-8\n\tring-primary-500\n\tbg-secondary-500\n`\n\nconst IndexSplash = () => {\n\treturn(\n\t\t<IndexSplashWrapper>\n\t\t\t<IndexProfilePicture src={ProfPic} alt=\"My face\"/>\n\t\t\t<TitleWithNavbar>\n\t\t\t\t<MainTitle>\n\t\t\t\t\t<MainTitleWord>Kamil</MainTitleWord> \n\t\t\t\t\t<MainTitleWord>Rybacki</MainTitleWord>\n\t\t\t\t</MainTitle>\n\t\t\t\t<SubTitle>Personal portfolio & tech blogging thingamajig</SubTitle>\n\t\t\t\t<Separator/>\n\t\t\t\t<NavbarMenu/>\n\t\t\t</TitleWithNavbar>\n\t\t</IndexSplashWrapper>\n\t)\n}\n\nexport default IndexSplash\n\n","import IndexSplash from './IndexSplash'\n\nexport default IndexSplash\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport { Dictionary } from 'types'\n\ntype MovingCogsProps = {\n    children: JSX.Element | JSX.Element[]\n}\n\ntype CogProps = {\n    src: URL\n    src_height: number,\n    src_width: number,\n    x: number,\n    y: number,\n    spin_duration: number,\n}\n\nconst all_images_query = graphql`\n    query AssetsPhotos {\n            allFile(filter: { sourceInstanceName: { eq: \"images\" }}) {\n                edges {\n                    node {\n                    id\n                    publicURL\n                    }\n                }\n        }\n    }`\n\nconst CogsVignette = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    box-shadow: inset 0 0 10vw gray;\n    z-index: -99;\n`\n\nconst Cog = styled.div`\n    animation: cogspin ${(props: CogProps) => `${props.spin_duration}s`} linear infinite;\n    @keyframes cogspin {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n    &:before {\n        content: '';\n        width: ${(props: CogProps) => `${props.src_width}px`};\n        height: ${(props: CogProps) => `${props.src_height}px`};\n        display: block;\n        position: fixed;\n        left: ${(props: CogProps) => `${props.x}px`};\n        top: ${(props: CogProps) => `${props.y}px`};\n        background-image: ${(props: CogProps) => `url(${props.src})`};\n        z-index: -99;\n        opacity: 0.1;\n    }\n`\n\nconst spawnCogs = (cogs: Array<Dictionary<string>>, number_of_cogs: number) => {\n    const chosen_cogs = Array.from(Array(number_of_cogs).keys()).map(() => Math.floor(Math.random() * cogs.length))\n    return chosen_cogs.every((entry) => !entry) ? [] : chosen_cogs.map((cog_id, cog_index) => {\n        const cog_data = cogs[cog_id]\n\n        const generated_x = Math.floor(Math.random() * window.screen.width)\n        const generated_y = Math.floor(Math.random() * window.screen.height)\n        const generated_duration = 10 + Math.floor(Math.random() * 30)\n\n        return(\n            <Cog \n                src={cog_data.url}\n                src_height={cog_data.height}\n                src_width={cog_data.width}\n                x={generated_x}\n                y={generated_y}\n                spin_duration={generated_duration}\n                key={`cog_${cog_index}`}\n            />\n        )\n    })\n}\n\nconst MovingCogs: React.FunctionComponent<MovingCogsProps> = ({children}) => {\n    const [cogs, loadCogs] = useState([])\n    const all_images_query_result = useStaticQuery(all_images_query)\n\n    useEffect(() => {\n        const images_list = all_images_query_result.allFile.edges\n        const cogs_list = images_list.reduce((current_list: Array<string>, image: Dictionary) => {\n            const image_url = image.node.publicURL\n            const img = new Image();\n            img.src = image_url;\n\n            if ( image_url.search(/cog(\\d*).svg/i) > 0 ) {\n                const cog_data = {\n                    url: image_url,\n                    width: img.width,\n                    height: img.height\n                }\n                return [...current_list, cog_data]\n            }\n            return current_list\n        }, [])\n        loadCogs(cogs_list)\n    }, [])\n\n    return(\n        <>\n            { cogs ? spawnCogs(cogs, 100) : '' } \n            {children}\n            <CogsVignette/>\n        </>\n    )\n}\n\nexport default MovingCogs;","import MovingCogs from './MovingCogs'\n\nexport default MovingCogs","import React from \"react\"\n\nimport IndexSplash from '@components/IndexSplash'\nimport MovingCogs from '@components/MovingCogs'\nimport PageWrapper from \"@components/PageWrapper\" \n\nconst IndexPage = () => {\n  return (\n    <MovingCogs>\n      <PageWrapper header={false} footer={false}>\n        <IndexSplash/>\n      </PageWrapper>\n    </MovingCogs>\n  )\n}\n\nexport default IndexPage\n"],"names":["IndexSplashWrapper","tw","_templateObject","TitleWithNavbar","_templateObject2","Separator","_templateObject3","MainTitle","_templateObject4","MainTitleWord","_templateObject5","SubTitle","_templateObject6","IndexProfilePicture","_templateObject7","React","src","ProfPic","alt","NavbarMenu","CogsVignette","styled","Cog","props","spin_duration","src_width","src_height","x","y","children","useState","cogs","loadCogs","all_images_query_result","useStaticQuery","useEffect","cogs_list","allFile","edges","reduce","current_list","image","image_url","node","publicURL","img","Image","search","cog_data","url","width","height","number_of_cogs","chosen_cogs","Array","from","keys","map","Math","floor","random","length","every","entry","cog_id","cog_index","generated_x","window","screen","generated_y","generated_duration","key","spawnCogs","MovingCogs","PageWrapper","header","footer","IndexSplash"],"sourceRoot":""}