{"version":3,"file":"component---src-pages-posts-tsx-4738b6db8ec7022a24de.js","mappings":"2KAEA,E,MCEqBA,GAAAA,GAAHC,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,4D,mICFlB,GCC2BD,IAAAA,KAAHC,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,iBAIH,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtB,OACCC,EAAAA,cAAAA,EAAAA,SAAAA,KACED,KCAEE,EAAcJ,IAAAA,QAAHC,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,+DAQXI,EAAqBL,IAAAA,IAAHM,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,oDAMlBC,EAAYP,GAAAA,CAAGQ,EAAAA,GAAHR,CAAHS,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,kDAMTC,EAAWV,IAAAA,KAAHW,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,6DAORC,EAAcZ,IAAAA,EAAHa,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,iCCnCjB,EDwCyD,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAC1D,OACCX,EAAAA,cAACC,EAAD,KACCD,EAAAA,cAACE,EAAD,KACCF,EAAAA,cAACI,EAAD,CAAWQ,GAAE,UAAYD,EAAKE,MAAQb,EAAAA,cAAAA,KAAAA,KAAKW,EAAKG,YAAYC,QAC5Df,EAAAA,cAACO,EAAD,KAAWI,EAAKG,YAAYE,OAE7BhB,EAAAA,cAACS,EAAD,KAAcE,EAAKM,W,oBELtB,EAnBkB,WACjB,OACCjB,EAAAA,cAACkB,EAAAA,EAAD,KACClB,EAAAA,cAACmB,EAAAA,EAAD,cACGnB,EAAAA,cAACoB,EAAD,KACEpB,EAAAA,cAACqB,EAAAA,GAAD,CACEC,MAtBO,aAuBPC,OAAQ,SAACC,GAEP,OADcA,EAAaC,OAAOC,MAE1BC,KAAI,SAACC,GAAD,OAA8B5B,EAAAA,cAAC6B,EAAD,CAAUlB,KAAMiB,EAAME,IAAKF,EAAKG","sources":["webpack://kamilrybacki/./src/components/SubpageTitle/index.ts","webpack://kamilrybacki/./src/components/SubpageTitle/SubpageTitle.tsx","webpack://kamilrybacki/./src/components/CardsWrapper/index.ts","webpack://kamilrybacki/./src/components/CardsWrapper/CardsWrapper.tsx","webpack://kamilrybacki/./src/components/cards/PostCard/PostCard.tsx","webpack://kamilrybacki/./src/components/cards/PostCard/index.ts","webpack://kamilrybacki/./src/pages/posts.tsx"],"sourcesContent":["import SubpageTitle from './SubpageTitle'\n\nexport default SubpageTitle","import React from 'react'\n\nimport tw from 'tailwind-styled-components'\n\nconst SubpageTitle = tw.h1`\n\ttext-4xl\n\tfont-display\n\tunderline\n\tmb-10\n`\n\nexport default SubpageTitle","import CardsWrapper from \"./CardsWrapper\";\n\nexport default CardsWrapper","import React from \"react\";\nimport tw from 'tailwind-styled-components';\n\nconst CardsWrapperLayout = tw.main`\n\tgrid\n`\n\nconst CardsWrapper = ({children}) => {\n\treturn(\n\t\t<>\n\t\t\t{children}\n\t\t</>\n\t)\n}\n\nexport default CardsWrapper","import React from \"react\";\nimport { Link } from \"gatsby\"\nimport tw from 'tailwind-styled-components'\n\nimport { Dictionary } from \"@src/types\"\n\ntype PostCardProps = {\n\tdata: Dictionary<string>\n}\n\nconst CardWrapper = tw.article`\n\tw-max\n\tp-5\n\tmax-w-md\n\tborder-2\n\trounded-xl\n`\n\nconst FrontmatterWrapper = tw.div`\n\tflex\n\tjustify-between\n\talign-middle\n`\n\nconst PostTitle = tw(Link)`\n\tfont-display\n\tfont-bold\n\ttext-2xl\n`\n\nconst PostDate = tw.span`\n\tpy-2\n\tfont-sans\n\ttext-sm\n\ttext-primary-200\n`\n\nconst PostExcerpt = tw.p`\n\tfont-body\n\ttext-lg\n`\n\nconst PostCard: React.FunctionComponent<PostCardProps> = ({data}) => {\n\treturn(\n\t\t<CardWrapper>\n\t\t\t<FrontmatterWrapper>\n\t\t\t\t<PostTitle to={`/posts/${data.slug}`}><h1>{data.frontmatter.title}</h1></PostTitle>\n\t\t\t\t<PostDate>{data.frontmatter.date}</PostDate>\n\t\t\t</FrontmatterWrapper>\n\t\t\t<PostExcerpt>{data.excerpt}</PostExcerpt>\n\t\t</CardWrapper>\n\t)\n}\n\nexport default PostCard\n","import PostCard from \"./PostCard\";\n\nexport default PostCard","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport CardsWrapper from \"@components/CardsWrapper\"\nimport { Dictionary } from \"@src/types\"\nimport PostCard from \"@components/cards/PostCard\" \nimport PageWrapper from \"@components/PageWrapper\" \nimport SubpageTitle from \"@components/SubpageTitle\"\n\nconst posts_query = graphql`\n  query SITE_INDEX_QUERY {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        id\n        excerpt(pruneLength: 250)\n        frontmatter {\n          title\n          date(formatString: \"YYYY MMMM Do\")\n        }\n        slug\n      }\n    }\n  }\n`\n\nconst PostsPage = () => {\n\treturn(\n\t\t<PageWrapper>\n\t\t\t<SubpageTitle>Posts</SubpageTitle>\n      <CardsWrapper>\n        <StaticQuery\n          query={posts_query}\n          render={(query_result: Dictionary<string>) => {\n            const posts = query_result.allMdx.nodes\n            return(\n              posts.map((post: Dictionary<string>) => <PostCard data={post} key={post.id}/>)\n            )\n          }}\n        />\n      </CardsWrapper>\n\t\t</PageWrapper>\n\t)\n} \n\nexport default PostsPage\n"],"names":["tw","_templateObject","children","React","CardWrapper","FrontmatterWrapper","_templateObject2","PostTitle","Link","_templateObject3","PostDate","_templateObject4","PostExcerpt","_templateObject5","data","to","slug","frontmatter","title","date","excerpt","PageWrapper","SubpageTitle","CardsWrapper","StaticQuery","query","render","query_result","allMdx","nodes","map","post","PostCard","key","id"],"sourceRoot":""}