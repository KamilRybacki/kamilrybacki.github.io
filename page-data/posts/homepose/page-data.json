{
    "componentChunkName": "component---src-layouts-project-entry-layout-tsx",
    "path": "/posts/homepose",
    "result": {"pageContext":{"pagePath":"/posts/homepose","frontmatter":{"title":"Homepose","date":"03/31/2022","tags":["test","first"],"time":1,"thumbnail":"homepose.svg","gallery":"homepose","techs":["github","docker","docker-compose","python","bash","dnsmasq"],"abstract":"A homebrew library created to quickly set up my personal homelab using Docker and templated managed by a Python module. It also automatically advertises composed services using predefined domain and launches a custom DNS server, that can be used to resolve each service's address over local network.","link":"https://github.com/KamilRybacki/HomePose","readme":"https://raw.githubusercontent.com/KamilRybacki/Homepose/main/README.md"},"content":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Homepose\",\n  \"date\": \"2022-03-31T00:00:00.000Z\",\n  \"tags\": \"test first\",\n  \"thumbnail\": \"homepose.svg\",\n  \"gallery\": \"homepose\",\n  \"techs\": \"github docker docker-compose python bash dnsmasq\",\n  \"abstract\": \"A homebrew library created to quickly set up my personal homelab using Docker and templated managed by a Python module. It also automatically advertises composed services using predefined domain and launches a custom DNS server, that can be used to resolve each service's address over local network.\",\n  \"link\": \"https://github.com/KamilRybacki/HomePose\",\n  \"readme\": \"https://raw.githubusercontent.com/KamilRybacki/Homepose/main/README.md\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This project was created \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"over the course of February and March\"), \" during my deep dive into \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dockerizing local services\"), \" to create my own \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"homelab\"), \".\\nDue to the fact I am a 3D printing hobbyist, I've wanted \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"a local Nextcloud storage\"), \" set up to quickly share my STL files between a Raspberry Pi\\n(which is hooked up to my Ender 3 printer) and any computer connected to home WiFi.\"), mdx(\"p\", null, \"So, I've bought \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.lenovo.com/hk/en/desktops-and-all-in-ones/thinkcentre/m-series-tiny/0958/p/11TC1TMM72E0958\"\n  }, \"a cheap Lenovo TinyPc\"), \", plugged in\\na couple of 2.5 inch HDD I've has laying around and that was the start of my \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"personal home server\"), \". After setting up NextCloud, I've decided to also\\ninclude \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Gitea + Drone version control\"), \" to play around with CI/CD workflows and backup code base that was used solely over my local machines and\\ndidn't really have place over GitHub. Rest of the services used by me can be seen in the GitHub repo, under the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stack/\"), \" directory.\"), mdx(\"p\", null, \"To do all of this I've chosen Docker Compose as my container engine, due to it's simplicity and an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"abundace\"), \" of YAMLs posted all over the internet.\\nAlso, any kind of cluster magic with K8s would be a gross exaggeration of how my homelab should function (due to its scale), at least for now.\"), mdx(\"p\", null, \"You can read how the tools work in the Readme of this project, since it's not just a simple Python script that calls \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose up\"), \" and wishes\\neverybody a good day. It's a small scale library and has some pre-building and post-setup hooks, that may make Your everyday homelab admin life easier.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},
    "staticQueryHashes": ["1377784750","3313936189","90615735"]}